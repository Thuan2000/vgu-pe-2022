# import ProjectFragment from "./project.fragment.graphql"

mutation CreateProject($input: CreateProjectInput!) {
  createProject(input: $input) {
    success
    message
  }
}

query Projects($companyId: Int!, $offset: Int!) {
  projects(companyId: $companyId, offset: $offset) {
    projects {
      ...ProjectFragment
      buyingRequests {
        id
        gallery {
          location
        }
      }
    }
    count
  }
}

query Project($slug: String!) {
  project(slug: $slug) {
    ...ProjectFragment
    createdBy {
      id
      firstName
      lastName
    }
    updatedBy {
      id
      firstName
      lastName
    }
    buyingRequests {
      id
      name
      createdAt
      updatedAt
      location
      minOrder
      unit
      status
      gallery {
        location
      }
      projects {
        id
      }
      endDate
      slug
    }
  }
}

mutation AddToProject($projectId: Int!, $buyingRequests: [Int!]!) {
  addToProject(projectId: $projectId, buyingRequests: $buyingRequests) {
    success
    message
  }
}

mutation DeleteProject($id: Int!) {
  deleteProject(id: $id) {
    success
    message
  }
}

mutation DeleteProjects($ids: [Int]!) {
  deleteProjects(ids: $ids) {
    success
    message
  }
}

mutation UpdateBuyingRequests($id: Int!, $brIds: [Int]!) {
  updateBuyingRequests(id: $id, brIds: $brIds) {
    success
    message
  }
}
