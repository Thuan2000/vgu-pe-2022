type ServiceListItem {
	id: Int!
	slug: String!
	location: String!
	name: String!
	company: Company!
	price: Date
	minPrice: Date
	maxPrice: Date
	rating: Float
	coverImage: File
}

input FaqInput {
	question: String!
	answer: String!
}

type Faq {
	question: String!
	answer: String!
}

# Maybe there's better solution later
# To use only accepted types for service package
input PackageInput {
	id: String!
	packageRows: [PackageRowsInput!]!
}

type PackageRow {
	id: String!
	name: String!
	inputType: String!
	description: String
}

input PackageRowInput {
	id: String!
	name: String!
	inputType: String!
	description: String
}

input PackageRowsInput {
	rowId: String!
	value: String!
}

input GroupServiceInput {
	name: String!
	description: String!
	minPrice: Date!
	maxPrice: Date!
	unit: UnitInput!
}

input GroupInput {
	name: String!
	services: [GroupServiceInput!]!
}

type ServicePackageRow {
	rowId: String!
	value: String!
}

type ServicePackage {
	id: String!
	packageRows: [ServicePackageRow!]!
}

type Service {
	id: Int!
	name: String!
	slug: String!
	industryId: Int!
	location: String!
	categoryId: Int!
	description: String!
	createdAt: Date!
	updatedAt: Date!
	company: Company!
	price: Date
	minPrice: Date
	maxPrice: Date
	rating: Float
	coverImage: File
	faqs: [Faq!]
	tags: [Tag!]!
	packages: [ServicePackage!]
	packageRows: [PackageRow!]
	images: [File!]
	videos: [File!]
	certificates: [File!]
}

input CreateServiceInput {
	name: String!
	industryId: Int!
	categoryId: Int!
	description: String!
	location: String!
	tags: [String!]!
	faqs: [FaqInput!]
	images: [FileInput!]
	certificates: [FileInput!]
	videos: [FileInput!]
	price: Date
	packages: [PackageInput!]
	packageRows: [PackageRowInput!]
	companyId: Int!
	coverImage: FileInput
	companyName: String!
	createdById: Int!
	newTags: [TagInput!]
	minPrice: Date
	maxPrice: Date
}

input UpdateServiceInput {
	id: Int!
	name: String!
	industryId: Int!
	categoryId: Int!
	description: String!
	location: String!
	tags: [String!]!
	faqs: [FaqInput!]
	images: [FileInput!]
	certificates: [FileInput!]
	videos: [FileInput!]
	price: Date
	packages: [PackageInput!]
	packageRows: [PackageRowInput!]
	coverImage: FileInput
	newTags: [TagInput!]
	minPrice: Date
	maxPrice: Date
}

input FetchServicesInput {
	companyId: Int
	offset: Int!
	limit: Int!
	searchValue: String
	categoryId: Int
	location: String
	status: BRStatus
	industryId: Int
	minPrice: Date
	maxPrice: Date
}

type ServicesResponse {
	services: [ServiceListItem]!
	pagination: Pagination!
}

extend type Mutation {
	serviceNameSuggestion: [NameSuggestion!]
	createService(input: CreateServiceInput!): CreateResponse!
	updateService(input: UpdateServiceInput!): CreateResponse!
	deleteServices(ids: [Int!]!): Response!
}

extend type Query {
	services(input: FetchServicesInput): ServicesResponse!
	service(slug: String!): Service!
}
