type Project {
	id: Int!
	name: String!
	endDate: Date!
	image: File
	description: String
	buyingRequests: [Int!]!
	companyId: Int!
	createdById: Int!
}

input ProjectInput {
	name: String!
	endDate: Date!
	image: Upload
	description: String
	buyingRequests: [Int!]!
	companyId: Int!
	createdById: Int!
	companyName: String!
}

type GetProjects {
	projects: [Project!]!
	count: Int!
}

extend type Query {
	projects(companyId: Int!, offset: Int!): GetProjects!
}

extend type Mutation {
	createProject(input: ProjectInput!): Response!
	addToProject(projectId: Int!, brIds: [Int]!): Response!
}
