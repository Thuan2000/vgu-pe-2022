type AllowedCompany {
	minSupplierExperience: Int
	minSupplierRating: Int
	minSuplierSells: Int
}

input AllowedCompanyInput {
	minSupplierExperience: Int
	minSupplierRating: Int
	minSuplierSells: Int
}

type BuyingRequest {
	name: String!
	endDate: Int!
	location: String!
	description: String
	productName: String!
	minBudget: Int!
	maxBudget: Int!
	minOrder: Int!
	unit: String!
	categories: [Int]
	gallery: [File]
	allowedCompany: AllowedCompany
}

input BuyingRequestInput {
	name: String!
	# Timestamp
	endDate: Date!
	location: String!
	description: String
	productName: String!
	minBudget: Int!
	maxBudget: Int!
	minOrder: Int!
	gallery: [Upload]
	unit: String!
	categories: [Int]
	allowedCompany: AllowedCompanyInput
	companyId: Int!
}

extend type Mutation {
	createBuyingRequest(input: BuyingRequestInput): Response
}

extend type Query {
	buyingRequests(companyId: Int!): [BuyingRequest]!
}
