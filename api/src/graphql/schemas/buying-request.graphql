type AllowedCompany {
	minSupplierExperience: Float
	minSupplierRating: Float
	minSuplierSells: Float
}

input AllowedCompanyInput {
	minSupplierExperience: Float
	minSupplierRating: Float
	minSuplierSells: Float
}

type BuyingRequest {
	id: ID!
	name: String!
	slug: String!
	endDate: Date!
	location: String!
	industry: Industry!
	categories: [Category!]!
	description: String
	productName: String!
	projects: [Project]
	createdBy: User!
	minBudget: Date!
	maxBudget: Date!
	minOrder: Int!
	status: String!
	createdAt: Date!
	updatedAt: Date!
	unit: String!
	gallery: [File]
	biddersLimit: Int
	allowedCompany: AllowedCompany
	company: Company
}

input CreateBuyingRequestInput {
	name: String!
	endDate: Date!
	location: String!
	description: String
	productName: String!
	minBudget: Date!
	maxBudget: Date!
	minOrder: Int!
	gallery: [Upload]
	unit: String!
	industryId: Int!
	categoryIds: [Int!]!
	companyId: Int!
	companyName: String!
	createdById: Int!
	biddersLimit: Int
	allowedCompany: AllowedCompanyInput
}

input UpdateBuyingRequestInput {
	name: String!
	endDate: Date!
	location: String!
	description: String
	productName: String!
	industryId: Int!
	categoryIds: [Int]!
	minBudget: Date!
	maxBudget: Date!
	minOrder: Int!
	oldGallery: [FileInput]
	gallery: [Upload]
	unit: String!
	companyId: Int!
	companyName: String!
	updatedById: Int!
	biddersLimit: Int
	allowedCompany: AllowedCompanyInput
}

type BuyingRequestsResponse {
	buyingRequests: [BuyingRequest]!
	totalDataCount: Int
}

extend type Mutation {
	getSuggestion(name: String): [String!]
	createBuyingRequest(input: CreateBuyingRequestInput): Response!
	updateBuyingRequest(id: Int!, newValue: UpdateBuyingRequestInput): Response!
	deleteBuyingRequest(id: Int!): Response!
	deleteBuyingRequests(ids: [Int!]!): Response!
}

extend type Query {
	bulkData: Response!
	deleteIndex: Response!
	createIndex: Response!
	buyingRequestsAndCount(
		companyId: Int!
		offset: Int!
	): BuyingRequestsResponse!
	buyingRequest(id: Int!): BuyingRequest!
	discoveryBuyingRequestsAndCount(
		companyId: Int!
		offset: Int!
	): BuyingRequestsResponse!
	buyingRequestBySlug(slug: String!): BuyingRequest!
	getBuyingRequestsByIds(ids: [Int]!): [BuyingRequest]!
}
